<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Carré 1 par Gabriel Marrero</title>
  
  <link rel="stylesheet" type="text/css" href="StyleLabo7.css" /> 
   
  <script type="text/javascript" src="WebGl.js"></script>
  <script type="text/javascript" src="ShaderJaune.js"></script>
  <script type="text/javascript" src="glMatrix-0.9.5.min.js"></script>
    
 <script type="text/javascript">
    
    function demarrer() {
      var objCanvas = document.getElementById('monCanvas');
      var objgl = initWebGL(objCanvas);  // Initialise le contexte WebGL
	  var objProgShaders = initShaders(objgl); // iniatilise les shaders
	  var objCarre = creerCarre(objgl); // Définir le carré
	  effacerCanevas(objgl);
      dessiner(objgl, objProgShaders, objCarre); // Le dessiner
	}
    
    // Pour dessiner le carré
    function dessiner(objgl, objProgShaders, objCarre) {
        // La vue sur le canevas
        objgl.viewport(0, 0, objgl.drawingBufferWidth, objgl.drawingBufferHeight);

        // Matrice de projection
        var matProjection = mat4.create();
        mat4.ortho(-2, 2, -2, 2, -5, 5, matProjection);
        // Relier la matrice de projection aux shaders
        objgl.uniformMatrix4fv(objProgShaders.matProjection, false, matProjection);

        // Matrice du modèle
        var matModeleVue = mat4.create();
        mat4.identity(matModeleVue);
        // Relier la matrice du modèle aux shaders
        objgl.uniformMatrix4fv(objProgShaders.matModeleVue, false, matModeleVue);

        // Relier les vertex aux shaders
        objgl.bindBuffer(objgl.ARRAY_BUFFER, objCarre);
        objgl.vertexAttribPointer(objProgShaders.posVertex, 3, objgl.FLOAT, false, 0, 0);

        // Dessiner le carré
        var intNbVertex = (objgl.getBufferParameter(objgl.ARRAY_BUFFER, objgl.BUFFER_SIZE) / 4) / 3;
        objgl.drawArrays(objCarre.typeDessin, 0, intNbVertex);
    }

        // Pour effacer le canevas
        function effacerCanevas(objgl) {
          // Met la couleur d'effacement au noir et complétement opaque
          objgl.clearColor(1.0, 0.0, 0.0, 1.0);
          // Efface les couleurs et le buffer de profondeur.
          objgl.clear(objgl.COLOR_BUFFER_BIT|objgl.DEPTH_BUFFER_BIT);
    }

    //Pour créer le carré
    function creerCarre(objgl) {
        var objCarre = objgl.createBuffer();
        var tabVertex = [
             1.0, 1.0, 0.0,
             1.0, -1.0, 0.0,
            -1.0, -1.0, 0.0,
            -1.0, 1.0, 0.0
        ];

        objgl.bindBuffer(objgl.ARRAY_BUFFER, objCarre);
        objgl.bufferData(objgl.ARRAY_BUFFER, new Float32Array(tabVertex), objgl.STATIC_DRAW);

        objCarre.typeDessin = objgl.LINE_LOOP;

        return objCarre;
    }
  
</script>
</head>

<body onload="demarrer()"> 
   <header class="sTexteCentre sLargeurDiv sEntete">
        <p> 
            <span class="sTitreApp">
                Carré<br />
            </span> par 
            <span class="sAuteurApp">
                Gabriel Marrero
            </span> 
       </p>
    </header>

    <main class="sLargeurDiv sCorps">	
	   <canvas id="monCanvas" width="640" height="640">
		    Votre navigateur ne supporte pas la balise canvas
	    </canvas>
    </main>

    <footer class="sLargeurDiv sPiedDePage">
        <p>
            <a href="http://www.cgodin.qc.ca">
                <img src="logoCGG.jpg" alt="logoCGG" />
            </a> 
			<a href="http://www.cgodin.qc.ca/programme/techniques-informatique/">
	           Département d'informatique du Cégep Gérald-Godin
	        </a> 
            <br />
            &copy; 2020
        </p>
    </footer>

</body>
</html>