<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>10-2-7 Dessiner spirale</title>

  <script type="text/javascript" src="WebGl.js"></script>
  <script type="text/javascript" src="ShaderBlanc.js"></script>
  <script type="text/javascript" src="glMatrix-0.9.5.min.js"></script>

  <script type="text/javascript">

    function demarrer() {
      const objCanvas = document.getElementById('monCanvas');
      const objgl = initWebGL(objCanvas);  // Initialise le contexte WebGL
      const objProgShaders = initShaders(objgl);
      const objSpirale = creerSpirale(objgl);
      effacerCanevas(objgl);
      dessiner(objgl, objProgShaders, objSpirale);
    }

    function dessiner(objgl, objProgShaders, objSpirale) {
      // La vue
      objgl.viewport(0, 0, objgl.drawingBufferWidth, objgl.drawingBufferHeight);

      // Matrice de projection
      let matProjection = mat4.create();
      mat4.ortho(-2, 2, -2, 2, -5, 5, matProjection);
      // Relier la matrice aux shaders
      objgl.uniformMatrix4fv(objProgShaders.matProjection, false, matProjection);

      // Matrice du modèle
      let matModeleVue = mat4.create();
      mat4.identity(matModeleVue);
      // Relier la matrice aux shaders
      objgl.uniformMatrix4fv(objProgShaders.matModeleVue, false, matModeleVue);

      // Relier les vertes aux shaders
      objgl.bindBuffer(objgl.ARRAY_BUFFER, objSpirale);
      objgl.vertexAttribPointer(objProgShaders.posVertex, 3, objgl.FLOAT, false, 0, 0);

      // Dessiner la spirale
      let intNbVertex = (objgl.getBufferParameter(objgl.ARRAY_BUFFER, objgl.BUFFER_SIZE) / 4) / 3;
      objgl.drawArrays(objSpirale.typeDessin, 0, intNbVertex);
    }

    function effacerCanevas(objgl) {
      // Met la couleur d'effacement au noir et complétement opaque
      objgl.clearColor(0.0, 0.0, 0.0, 1.0);
      // Efface les couleurs et le buffer de profondeur.
      objgl.clear(objgl.COLOR_BUFFER_BIT | objgl.DEPTH_BUFFER_BIT);
    }

    function creerSpirale(objgl) {
      let objSpirale = objgl.createBuffer();
      let intNbCirconvolutions = 10;
      let tabVertex = [];
      for (let i = 0; i < 360 * intNbCirconvolutions; i++) {
        let fltRayon = i / (360 * intNbCirconvolutions);
        tabVertex = tabVertex.concat([Math.cos(i * Math.PI / 180) * fltRayon, Math.sin(i * Math.PI / 180) * fltRayon, 0.0]);
      }
      objgl.bindBuffer(objgl.ARRAY_BUFFER, objSpirale);
      objgl.bufferData(objgl.ARRAY_BUFFER, new Float32Array(tabVertex), objgl.STATIC_DRAW);

      objSpirale.typeDessin = objgl.LINE_STRIP;

      return objSpirale;
    }

  </script>
</head>

<body onload="demarrer()">
  <canvas id="monCanvas" width="640" height="640">
    Votre navigateur ne supporte pas la balise canvas
  </canvas>
</body>

</html>